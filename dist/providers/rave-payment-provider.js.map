{"version":3,"file":"rave-payment-provider.js","sourceRoot":"","sources":["../../src/providers/rave-payment-provider.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Misc } from './misc-provider';\n\n@Injectable()\n\nexport class RavePayment {\n    schema: object = {\n        txref: {\n          required: \"true\",\n          type: \"string\",\n          isEmpty: function (data) {\n            return data === \"\" || data == null || data == undefined\n          }\n        },\n        customer_phone: {\n          required: \"true\",\n          type: \"string\",\n          isEmpty: function (data) {\n            return data === \"\" || data == null || data == undefined\n          }\n        },\n        customer_email: {\n          required: \"true\",\n          type: \"string\",\n          isEmpty: function (data) {\n            return data === \"\" || data == null || data == undefined\n          },\n          isValidEmail: function (email) {\n            return email.match(/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/)\n          }\n        },\n        amount: {\n          required: \"true\",\n          type: \"number\",\n          isEmpty: function (data) {\n            return data === \"\" || data == null || data == undefined\n          }\n        },\n        integrity_hash: {\n          required: false,\n          type: \"string\",\n        },\n        payment_options: {\n          required: false,\n          type: \"string\",\n        },\n        payment_plan: {\n          required: false,\n          type: \"number\",\n        },\n        subaccounts: {\n          required: false,\n          isValidArray: function (array) {\n            return Array.isArray(array)\n          }\n        },\n        currency: {\n          required: false,\n          type: \"string\"\n        },\n        country: {\n          required: false,\n          type: \"string\",\n        },\n        customer_firstname: {\n          required: false,\n          type: \"string\",\n        },\n        customer_lastname: {\n          required: false,\n          type: \"string\",\n        },\n        custom_title: {\n          required: false,\n          type: \"string\",\n        },\n        custom_description: {\n          required: false,\n          type: \"string\",\n        },\n        redirect_url: {\n          required: false,\n          type: \"string\",\n          isValidUri: function (email) {\n            return email.match(/\\w+:(\\/?\\/?)[^\\s]+/g)\n          }\n        }\n  }\n\n    constructor(private misc: Misc) {\n    }\n\n    create(payload) {\n        const result = this.validate(payload)\n        if(result[\"valid\"] == false) return result[\"error\"]\n        else {\n            // for (const key in result[\"payload\"]) {\n            //     if (result[\"payload\"].hasOwnProperty(key)) {\n            //         this[key] = result[\"payload\"][key];\n            //     }\n            // }\n            this.misc.paymentObject = result[\"payload\"]\n            return result[\"payload\"];\n        }\n    }\n\n    amount() : number {\n        return this.misc.paymentObject[\"amount\"]\n    }\n    \n    currency() : string{\n        return this.misc.paymentObject[\"currency\"]\n    }\n    \n    email() : string {\n        return this.misc.paymentObject[\"customer_email\"]\n    }\n\n    txref() : string{\n        return this.misc.paymentObject[\"txref\"]\n    }\n\n\n    validate(object) {\n        var error = []\n        var schema = this.schema;\n        if(object != null && typeof(object) == \"object\" && Array.isArray(object) == false){ // checks if payload object passed in is really an object\n    \n            for(let prop in schema) {\n    \n                if(Object.keys(object).indexOf(prop)  == -1 && schema[prop].required == false) continue;\n        \n                if(schema[prop].required == true) {\n                    if(schema[prop].isEmpty(object[prop])) error.push({'property': prop, 'error': `${prop} is a required field and cannot be empty`});\n                }\n            \n                if(prop == \"customer_email\") {\n                    let is_valid = schema[prop].isValidEmail(object[prop]);\n                    if(!is_valid) error.push({'property': prop, 'error': `${prop} must be a valid email address`});\n                }\n              \n                if(prop == \"subaccounts\") {\n                    let is_valid = schema[prop].isValidArray(object[prop]);\n                    if(!is_valid) error.push({'property': prop, 'error': `${prop} must be an array of objects`});\n                }\n              \n                if(prop == \"redirect_url\") {\n                    let is_valid = schema[prop].isValidUri(object[prop]);\n                    if(!is_valid) error.push({'property': prop, 'error': `${prop} must be a valid url`});\n                }\n                \n        \n                if(!(schema[prop].type == typeof(object[prop]))) { // checks that every parameter in the object is of its correct type\n                    if(prop == \"subaccounts\") continue\n                    error.push({'property': prop, 'error': `${prop} must be of type ${schema[prop].type}`});\n                }\n            }\n        }else error.push({property: object, error: \"You must pass in an object\"})\n        \n        if(error.length == 0) { \n            object.validated = true;\n            return {valid: true, payload: object};\n        }\n        else return {valid: false, error: error};\n    }    \n}\n\n"]}