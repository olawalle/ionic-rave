{"version":3,"file":"rave-provider.js","sourceRoot":"","sources":["../../src/providers/rave-provider.ts"],"names":[],"mappings":"AAAA,cAAc;;;;;;;;;;AAEd,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAA;AAC1C,OAAO,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAA;AACtC,OAAO,EAAE,WAAW,EAAE,MAAM,yBAAyB,CAAA;AAErD,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAA;AAGjD;IAEE,cAAmB,IAAU,EAAS,WAAwB,EAAU,IAAgB;QAArE,SAAI,GAAJ,IAAI,CAAM;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAE5F;;;;OAIG;IACH,mBAAI,GAAJ,UAAK,UAAkB,EAAE,UAAU;QAAnC,iBAQC;QARI,2BAAA,EAAA,kBAAkB;QACrB,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,IAAI,UAAU,IAAI,SAAS;gBAAE,MAAM,CAAC,mCAAmC,CAAC,CAAA;YACxE,IAAI,UAAU;gBAAE,KAAI,CAAC,GAAG,GAAG,KAAI,CAAC,IAAI,CAAC,IAAI,CAAA;;gBACpC,KAAI,CAAC,GAAG,GAAG,KAAI,CAAC,IAAI,CAAC,OAAO,CAAA;YACjC,KAAI,CAAC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAA;YAChC,OAAO,CAAC,IAAI,CAAC,CAAA;QACf,CAAC,CAAC,CAAA;IACJ,CAAC;IAED;;;OAGG;IACH,wBAAS,GAAT,UAAU,aAA0B;QAApC,iBAWC;QAVC,aAAa,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAA;QAChD,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,CAAA;QACvD,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,IAAI,UAAU,CAAC,WAAW,CAAC,EAAE;gBAC3B,OAAO,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,EAAE,UAAU,EAAE,EAAE,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;oBAClH,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,OAAO;wBAAE,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAA;;wBACzD,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA;gBACxC,CAAC,CAAC,CAAA;aACH;;gBAAM,MAAM,CAAC,UAAU,CAAC,CAAA;QAC3B,CAAC,CAAC,CAAA;IACJ,CAAC;IAED;;;OAGG;IACH,qBAAM,GAAN,UAAO,WAAW,EAAE,GAAG,EAAE,eAAe;QACtC,YAAY;QACZ,OAAO,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,eAAe,CAAC,CAAA;IACtE,CAAC;IAED,4BAAa,GAAb,UAAc,GAAG;QACf,IAAI,QAAQ,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAA;QACtC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAA;QACrE,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;QAC/B,OAAO,QAAQ,CAAC,QAAQ,CAAC,CAAA;IAC3B,CAAC;IAlDU,IAAI;QADhB,UAAU,EAAE;yCAGc,IAAI,EAAsB,WAAW,EAAgB,UAAU;OAF7E,IAAI,CAmDhB;IAAD,WAAC;CAAA,AAnDD,IAmDC;SAnDY,IAAI","sourcesContent":["/** @format */\n\nimport { Injectable } from '@angular/core'\nimport { Misc } from './misc-provider'\nimport { RavePayment } from './rave-payment-provider'\n\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable()\nexport class Rave {\n  uri: string\n  constructor(public misc: Misc, public ravePayment: RavePayment, private http: HttpClient) {}\n\n  /**\n   *\n   * @param production\n   * @param public_key\n   */\n  init(production = false, public_key) {\n    return new Promise((resolve, reject) => {\n      if (public_key == undefined) reject('Please pass in a valid public key')\n      if (production) this.uri = this.misc.live\n      else this.uri = this.misc.sandbox\n      this.misc.PBFPubKey = public_key\n      resolve(true)\n    })\n  }\n\n  /**\n   * Returns a payment link that can be used to spin up the modal\n   * @param paymentObject\n   */\n  preRender(paymentObject: RavePayment) {\n    paymentObject['PBFPubKey'] = this.misc.PBFPubKey\n    var paymentObj = this.ravePayment.create(paymentObject)\n    return new Promise((resolve, reject) => {\n      if (paymentObj['validated']) {\n        return this.http.post(this.uri, paymentObj, { headers: { 'content-type': 'application/json' } }).subscribe((response) => {\n          if (response['status'] == 'error') reject(response['message'])\n          else resolve(response['data']['link'])\n        })\n      } else reject(paymentObj)\n    })\n  }\n\n  /**\n   * Spins up the modal\n   * @param paymentLink\n   */\n  render(paymentLink, iab, browser_options) {\n    //@ts-ignore\n    return iab.create(paymentLink.toString(), '_blank', browser_options)\n  }\n\n  paymentStatus(url) {\n    var response = decodeURIComponent(url)\n    response = response.slice(response.indexOf('=') + 1, response.length)\n    response = JSON.parse(response)\n    return response['status']\n  }\n}\n"]}